
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'OP_FUNC_ASGN BR_LCSR BR_RCSR BR_LCIR BR_LCUR BR_RCIR BR_RCUR IDENTIFIER OP_ASGN OP_BITAND OP_BITNOT OP_BITOR OP_COMP OP_DIVIDE OP_EXPO OP_GREQ OP_GREAT OP_LEEQ OP_LESS OP_LOGAND OP_LOGOR OP_MINUS OP_MULT OP_NOEQ OP_PLUS OP_REMDR SEP_COLON SEP_COMMA TYPE_INTEGER TYPE_BOOLEAN TYPE_STRING TYPE_NUMERIC KEYWORD_FUNCTION KEYWORD_WHILE KEYWORD_VECTOR KEYWORD_RETURN KEYWORD_FOR KEYWORD_IN KEYWORD_PRINT KEYWORD_ELSE KEYWORD_VECTOR_CONSTRUCTOR KEYWORD_IFprogram : startstart : expression_statementsstart : loop_statementsstart : functions_statements start : conditional_statements start : expression_statements : expression startloop_statements : while_loop startloop_statements : for_loop startfunctions_statements : function_definition start functions_statements : function_call start conditional_statements : if_else_statement start conditional_statements : if_statement start if_else_statement : KEYWORD_IF BR_LCIR if_cond BR_RCIR M_1 compound_statement KEYWORD_ELSE M_2 compound_statement M_3if_statement : KEYWORD_IF BR_LCIR if_cond BR_RCIR M_1 compound_statement M_3while_loop : KEYWORD_WHILE BR_LCIR M_4 if_cond BR_RCIR M_5 compound_statement M_6for_loop : KEYWORD_FOR BR_LCIR IDENTIFIER KEYWORD_IN for_range BR_RCIR M_7 compound_statement M_8function_definition : fname OP_FUNC_ASGN KEYWORD_FUNCTION BR_LCIR arg_list M_10 BR_RCIR compound_statement M_11\n    \t\t\t\t\t| fname OP_FUNC_ASGN KEYWORD_FUNCTION BR_LCIR BR_RCIR M_12 compound_statement M_13fname : IDENTIFIERarg_list : IDENTIFIER M_9 SEP_COMMA arg_list\n    \t\t\t| IDENTIFIER M_9M_9 : M_10 : M_12 : M_11 : M_13 : M_1 : M_2 : M_3 : M_4 : M_5 : M_6 : M_7 : M_8 : function_call : fname2 BR_LCIR arg_to_pass BR_RCIR M_14fname2 : IDENTIFIERM_14 : arg_to_pass : arg_to_pass SEP_COMMA arg M_15arg_to_pass : arg M_15arg_to_pass : arg : rightsideM_15 : compound_statement : BR_LCUR statement_list BR_RCURstatement_list : statement_list statementstatement_list : statementstatement : expressionstatement : for_loopstatement : while_loopstatement : if_statementstatement : if_else_statementif_cond :  TYPE_BOOLEANif_cond :  comparison_statementif_cond : comparison_statement logop if_condif_cond : comparison_statement bitop if_cond if_cond : OP_BITNOT if_cond comparison_statement :  IDENTIFIER compop any_type comparison_statement :  IDENTIFIER compop IDENTIFIER comparison_statement :  any_type compop any_typecomparison_statement : BR_LCIR if_cond BR_RCIR logop : OP_LOGANDlogop : OP_LOGORbitop : OP_BITANDbitop : OP_BITORcompop : OP_GREATcompop : OP_LESScompop : OP_LEEQcompop : OP_GREQcompop : OP_NOEQcompop : OP_COMPexpression : IDENTIFIER BR_LCSR rightside BR_RCSR OP_ASGN rightsideexpression : IDENTIFIER OP_ASGN rightsideexpression : IDENTIFIER OP_ASGN vector_definition M_16M_16 : expression : KEYWORD_PRINT BR_LCIR rightside BR_RCIRexpression : KEYWORD_RETURN BR_LCIR rightside BR_RCIRvector_definition : KEYWORD_VECTOR BR_LCIR SEP_COMMA TYPE_INTEGER BR_RCIRvector_definition : KEYWORD_VECTOR_CONSTRUCTOR BR_LCIR vector_elements BR_RCIRvector_elements : vector_elements SEP_COMMA TYPE_INTEGER\n                        | TYPE_INTEGERrightside : rightside math rightsiderightside : IDENTIFIER math rightside rightside : BR_LCIR rightside BR_RCIRrightside : any_type bitop rightsiderightside : any_type logop rightsiderightside : IDENTIFIER bitop rightsiderightside : IDENTIFIER logop rightsiderightside : IDENTIFIERrightside : any_typerightside : IDENTIFIER BR_LCSR rightside BR_RCSRmath : OP_PLUSmath : OP_MINUSmath : OP_MULTmath : OP_DIVIDEmath : OP_EXPOmath : OP_REMDRfor_range : for_range_variables SEP_COLON for_range_variables\n     for_range_variables : IDENTIFIER for_range_variables : TYPE_INTEGERany_type : TYPE_NUMERICany_type : TYPE_INTEGERany_type : TYPE_STRINGany_type : TYPE_BOOLEAN'
    
_lr_action_items = {'TYPE_STRING':([23,26,27,29,32,35,37,43,52,55,56,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,90,91,94,95,96,97,98,99,100,101,104,122,174,],[39,39,39,-31,39,39,39,39,39,39,39,-93,-96,-94,-91,-92,39,-95,-62,39,-61,39,-64,-63,39,39,39,39,39,39,-66,-68,39,-69,-70,-65,-67,39,39,39,39,]),'OP_ASGN':([7,88,159,],[26,122,26,]),'BR_RCIR':([35,38,39,40,41,42,44,45,53,54,59,60,61,62,64,73,84,89,92,93,105,108,109,110,111,112,114,115,116,118,119,120,124,125,126,127,128,129,132,133,134,136,137,138,140,143,148,154,169,170,180,],[-41,66,-102,-100,-103,-101,-89,-88,-53,-52,102,-42,103,-43,107,109,117,123,-56,126,-40,-81,-83,-85,-84,-87,-86,-82,-23,-24,141,-80,-54,-55,-60,-57,-58,-59,-43,-99,149,-98,-90,-22,153,155,-39,-79,-97,-21,183,]),'TYPE_INTEGER':([23,26,27,29,32,35,37,43,52,55,56,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,90,91,94,95,96,97,98,99,100,101,104,106,121,122,142,150,174,],[42,42,42,-31,42,42,42,42,42,42,42,-93,-96,-94,-91,-92,42,-95,-62,42,-61,42,-64,-63,42,42,42,42,120,42,42,-66,-68,42,-69,-70,-65,-67,42,42,133,143,42,154,133,42,]),'OP_GREQ':([39,40,42,54,57,58,],[-102,-100,-101,-103,95,95,]),'OP_PLUS':([38,39,40,41,42,44,45,47,51,60,64,73,108,109,110,111,112,113,114,115,137,144,],[69,-102,-100,-103,-101,-89,69,69,69,69,69,69,69,-83,69,69,69,69,69,69,-90,69,]),'OP_LOGOR':([39,40,41,42,44,45,53,126,127,128,129,],[-102,-100,-103,-101,74,74,74,-60,-57,-58,-59,]),'OP_EXPO':([38,39,40,41,42,44,45,47,51,60,64,73,108,109,110,111,112,113,114,115,137,144,],[72,-102,-100,-103,-101,-89,72,72,72,72,72,72,72,-83,72,72,72,72,72,72,-90,72,]),'KEYWORD_RETURN':([0,1,3,8,10,11,15,17,39,40,41,42,44,45,47,50,66,87,103,107,108,109,110,111,112,114,115,131,137,141,144,146,147,152,155,156,157,158,160,161,163,164,165,167,171,172,173,175,176,178,179,181,182,184,186,],[2,2,2,2,2,2,2,2,-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-38,-75,-81,-83,-85,-84,-87,-86,-82,-36,-90,-78,-71,2,-30,-27,-77,-33,-51,-46,-48,-49,-50,-47,2,-15,-19,-26,-16,-45,-44,-35,-18,-30,-17,-14,-30,]),'SEP_COLON':([133,135,136,],[-99,150,-98,]),'OP_DIVIDE':([38,39,40,41,42,44,45,47,51,60,64,73,108,109,110,111,112,113,114,115,137,144,],[68,-102,-100,-103,-101,-89,68,68,68,68,68,68,68,-83,68,68,68,68,68,68,-90,68,]),'TYPE_NUMERIC':([23,26,27,29,32,35,37,43,52,55,56,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,90,91,94,95,96,97,98,99,100,101,104,122,174,],[40,40,40,-31,40,40,40,40,40,40,40,-93,-96,-94,-91,-92,40,-95,-62,40,-61,40,-64,-63,40,40,40,40,40,40,-66,-68,40,-69,-70,-65,-67,40,40,40,40,]),'BR_LCUR':([102,117,123,130,139,145,149,153,166,168,177,183,185,],[-28,-25,-32,146,146,146,-34,146,-29,146,146,-28,146,]),'BR_RCUR':([39,40,41,42,44,45,47,50,66,87,107,108,109,110,111,112,114,115,137,141,144,155,156,157,158,160,161,163,164,165,167,173,175,176,178,181,182,184,186,],[-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-75,-81,-83,-85,-84,-87,-86,-82,-90,-78,-71,-77,-33,-51,-46,-48,-49,-50,-47,176,-15,-16,-45,-44,-35,-30,-17,-14,-30,]),'OP_COMP':([39,40,42,54,57,58,],[-102,-100,-101,-103,98,98,]),'OP_MINUS':([38,39,40,41,42,44,45,47,51,60,64,73,108,109,110,111,112,113,114,115,137,144,],[70,-102,-100,-103,-101,-89,70,70,70,70,70,70,70,-83,70,70,70,70,70,70,-90,70,]),'BR_LCIR':([2,7,9,14,18,19,21,23,26,27,29,32,35,37,43,46,48,49,52,55,56,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,90,91,104,122,162,174,],[23,-37,29,32,35,36,37,43,43,43,-31,56,43,43,43,84,85,86,56,56,56,-93,-96,-94,-91,-92,43,-95,-62,43,-61,43,-64,-63,43,43,43,43,56,56,43,43,174,56,]),'KEYWORD_FUNCTION':([25,],[46,]),'OP_BITAND':([39,40,41,42,44,45,53,126,127,128,129,],[-102,-100,-103,-101,79,79,79,-60,-57,-58,-59,]),'IDENTIFIER':([0,1,3,8,10,11,15,17,23,26,27,29,32,35,36,37,39,40,41,42,43,44,45,47,50,52,55,56,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,87,90,91,94,95,96,97,98,99,100,103,104,106,107,108,109,110,111,112,114,115,122,131,137,141,144,146,147,150,151,152,155,156,157,158,160,161,163,164,165,167,171,172,173,174,175,176,178,179,181,182,184,186,],[7,7,7,7,7,7,7,7,45,45,45,-31,57,45,63,45,-102,-100,-103,-101,45,-89,-88,-72,-74,57,57,57,-93,-76,-96,-94,-91,-92,45,-95,-62,45,-61,45,-64,-63,45,45,45,45,116,-73,57,57,-66,-68,128,-69,-70,-65,-67,-38,45,136,-75,-81,-83,-85,-84,-87,-86,-82,45,-36,-90,-78,-71,159,-30,136,116,-27,-77,-33,-51,-46,-48,-49,-50,-47,159,-15,-19,-26,-16,57,-45,-44,-35,-18,-30,-17,-14,-30,]),'OP_LEEQ':([39,40,42,54,57,58,],[-102,-100,-101,-103,100,100,]),'SEP_COMMA':([35,39,40,41,42,44,45,60,61,62,86,105,108,109,110,111,112,114,115,116,119,120,132,137,138,148,154,],[-41,-102,-100,-103,-101,-89,-88,-42,104,-43,121,-40,-81,-83,-85,-84,-87,-86,-82,-23,142,-80,-43,-90,151,-39,-79,]),'KEYWORD_WHILE':([0,1,3,8,10,11,15,17,39,40,41,42,44,45,47,50,66,87,103,107,108,109,110,111,112,114,115,131,137,141,144,146,147,152,155,156,157,158,160,161,163,164,165,167,171,172,173,175,176,178,179,181,182,184,186,],[9,9,9,9,9,9,9,9,-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-38,-75,-81,-83,-85,-84,-87,-86,-82,-36,-90,-78,-71,9,-30,-27,-77,-33,-51,-46,-48,-49,-50,-47,9,-15,-19,-26,-16,-45,-44,-35,-18,-30,-17,-14,-30,]),'$end':([0,1,3,4,5,8,10,11,12,13,15,16,17,20,22,24,28,30,31,33,34,39,40,41,42,44,45,47,50,66,87,103,107,108,109,110,111,112,114,115,131,137,141,144,147,152,155,156,167,171,172,173,176,178,179,181,182,184,],[-6,-6,-6,-1,0,-6,-6,-6,-5,-2,-6,-3,-6,-4,-11,-12,-13,-9,-8,-10,-7,-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-38,-75,-81,-83,-85,-84,-87,-86,-82,-36,-90,-78,-71,-30,-27,-77,-33,-15,-19,-26,-16,-44,-35,-18,-30,-17,-14,]),'KEYWORD_ELSE':([147,176,186,],[166,-44,166,]),'OP_BITNOT':([29,32,52,55,56,74,76,78,79,90,91,174,],[-31,55,55,55,55,-62,-61,-64,-63,55,55,55,]),'TYPE_BOOLEAN':([23,26,27,29,32,35,37,43,52,55,56,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,90,91,94,95,96,97,98,99,100,101,104,122,174,],[41,41,41,-31,54,41,41,41,54,54,54,-93,-96,-94,-91,-92,41,-95,-62,41,-61,41,-64,-63,41,41,41,41,54,54,-66,-68,41,-69,-70,-65,-67,41,41,41,54,]),'KEYWORD_VECTOR_CONSTRUCTOR':([26,],[48,]),'BR_LCSR':([7,45,159,],[27,81,27,]),'KEYWORD_IN':([63,],[106,]),'OP_GREAT':([39,40,42,54,57,58,],[-102,-100,-101,-103,99,99,]),'BR_RCSR':([39,40,41,42,44,45,51,108,109,110,111,112,113,114,115,137,],[-102,-100,-103,-101,-89,-88,88,-81,-83,-85,-84,-87,137,-86,-82,-90,]),'KEYWORD_IF':([0,1,3,8,10,11,15,17,39,40,41,42,44,45,47,50,66,87,103,107,108,109,110,111,112,114,115,131,137,141,144,146,147,152,155,156,157,158,160,161,163,164,165,167,171,172,173,175,176,178,179,181,182,184,186,],[14,14,14,14,14,14,14,14,-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-38,-75,-81,-83,-85,-84,-87,-86,-82,-36,-90,-78,-71,162,-30,-27,-77,-33,-51,-46,-48,-49,-50,-47,162,-15,-19,-26,-16,-45,-44,-35,-18,-30,-17,-14,-30,]),'OP_LESS':([39,40,42,54,57,58,],[-102,-100,-101,-103,94,94,]),'OP_BITOR':([39,40,41,42,44,45,53,126,127,128,129,],[-102,-100,-103,-101,78,78,78,-60,-57,-58,-59,]),'OP_REMDR':([38,39,40,41,42,44,45,47,51,60,64,73,108,109,110,111,112,113,114,115,137,144,],[67,-102,-100,-103,-101,-89,67,67,67,67,67,67,67,-83,67,67,67,67,67,67,-90,67,]),'OP_NOEQ':([39,40,42,54,57,58,],[-102,-100,-101,-103,97,97,]),'OP_MULT':([38,39,40,41,42,44,45,47,51,60,64,73,108,109,110,111,112,113,114,115,137,144,],[65,-102,-100,-103,-101,-89,65,65,65,65,65,65,65,-83,65,65,65,65,65,65,-90,65,]),'OP_FUNC_ASGN':([6,7,],[25,-20,]),'KEYWORD_VECTOR':([26,],[49,]),'OP_LOGAND':([39,40,41,42,44,45,53,126,127,128,129,],[-102,-100,-103,-101,76,76,76,-60,-57,-58,-59,]),'KEYWORD_FOR':([0,1,3,8,10,11,15,17,39,40,41,42,44,45,47,50,66,87,103,107,108,109,110,111,112,114,115,131,137,141,144,146,147,152,155,156,157,158,160,161,163,164,165,167,171,172,173,175,176,178,179,181,182,184,186,],[19,19,19,19,19,19,19,19,-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-38,-75,-81,-83,-85,-84,-87,-86,-82,-36,-90,-78,-71,19,-30,-27,-77,-33,-51,-46,-48,-49,-50,-47,19,-15,-19,-26,-16,-45,-44,-35,-18,-30,-17,-14,-30,]),'KEYWORD_PRINT':([0,1,3,8,10,11,15,17,39,40,41,42,44,45,47,50,66,87,103,107,108,109,110,111,112,114,115,131,137,141,144,146,147,152,155,156,157,158,160,161,163,164,165,167,171,172,173,175,176,178,179,181,182,184,186,],[21,21,21,21,21,21,21,21,-102,-100,-103,-101,-89,-88,-72,-74,-76,-73,-38,-75,-81,-83,-85,-84,-87,-86,-82,-36,-90,-78,-71,21,-30,-27,-77,-33,-51,-46,-48,-49,-50,-47,21,-15,-19,-26,-16,-45,-44,-35,-18,-30,-17,-14,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'rightside':([23,26,27,35,37,43,71,75,77,80,81,82,83,104,122,],[38,47,51,60,64,73,108,110,111,112,113,114,115,60,144,]),'vector_elements':([85,],[119,]),'function_call':([0,1,3,8,10,11,15,17,],[1,1,1,1,1,1,1,1,]),'for_range':([106,],[134,]),'arg':([35,104,],[62,132,]),'bitop':([44,45,53,],[77,82,91,]),'for_range_variables':([106,150,],[135,169,]),'M_1':([102,183,],[130,185,]),'comparison_statement':([32,52,55,56,90,91,174,],[53,53,53,53,53,53,53,]),'compound_statement':([130,139,145,153,168,177,185,],[147,152,156,172,178,181,186,]),'if_else_statement':([0,1,3,8,10,11,15,17,146,165,],[3,3,3,3,3,3,3,3,157,157,]),'compop':([57,58,],[96,101,]),'start':([0,1,3,8,10,11,15,17,],[4,22,24,28,30,31,33,34,]),'program':([0,],[5,]),'fname':([0,1,3,8,10,11,15,17,],[6,6,6,6,6,6,6,6,]),'vector_definition':([26,],[50,]),'if_statement':([0,1,3,8,10,11,15,17,146,165,],[8,8,8,8,8,8,8,8,163,163,]),'M_10':([118,],[140,]),'math':([38,45,47,51,60,64,73,108,110,111,112,113,114,115,144,],[71,83,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'arg_list':([84,151,],[118,170,]),'for_loop':([0,1,3,8,10,11,15,17,146,165,],[10,10,10,10,10,10,10,10,160,160,]),'arg_to_pass':([35,],[61,]),'statement':([146,165,],[158,175,]),'while_loop':([0,1,3,8,10,11,15,17,146,165,],[11,11,11,11,11,11,11,11,161,161,]),'conditional_statements':([0,1,3,8,10,11,15,17,],[12,12,12,12,12,12,12,12,]),'M_9':([116,],[138,]),'M_8':([178,],[182,]),'any_type':([23,26,27,32,35,37,43,52,55,56,71,75,77,80,81,82,83,90,91,96,101,104,122,174,],[44,44,44,58,44,44,44,58,58,58,44,44,44,44,44,44,44,58,58,127,129,44,44,58,]),'M_3':([147,181,186,],[167,184,167,]),'M_2':([166,],[177,]),'expression_statements':([0,1,3,8,10,11,15,17,],[13,13,13,13,13,13,13,13,]),'M_7':([149,],[168,]),'M_6':([156,],[173,]),'M_5':([123,],[145,]),'M_4':([29,],[52,]),'logop':([44,45,53,],[75,80,90,]),'function_definition':([0,1,3,8,10,11,15,17,],[15,15,15,15,15,15,15,15,]),'loop_statements':([0,1,3,8,10,11,15,17,],[16,16,16,16,16,16,16,16,]),'M_13':([152,],[171,]),'fname2':([0,1,3,8,10,11,15,17,],[18,18,18,18,18,18,18,18,]),'functions_statements':([0,1,3,8,10,11,15,17,],[20,20,20,20,20,20,20,20,]),'statement_list':([146,],[165,]),'M_16':([50,],[87,]),'M_15':([62,132,],[105,148,]),'M_14':([103,],[131,]),'expression':([0,1,3,8,10,11,15,17,146,165,],[17,17,17,17,17,17,17,17,164,164,]),'M_12':([117,],[139,]),'M_11':([172,],[179,]),'if_cond':([32,52,55,56,90,91,174,],[59,89,92,93,124,125,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> start','program',1,'p_program','parser.py',15),
  ('start -> expression_statements','start',1,'p_start_1','parser.py',19),
  ('start -> loop_statements','start',1,'p_start_2','parser.py',22),
  ('start -> functions_statements','start',1,'p_start_3','parser.py',25),
  ('start -> conditional_statements','start',1,'p_start_4','parser.py',28),
  ('start -> <empty>','start',0,'p_start_5','parser.py',31),
  ('expression_statements -> expression start','expression_statements',2,'p_expression_statements_1','parser.py',34),
  ('loop_statements -> while_loop start','loop_statements',2,'p_loop_statements_1','parser.py',37),
  ('loop_statements -> for_loop start','loop_statements',2,'p_loop_statements_2','parser.py',40),
  ('functions_statements -> function_definition start','functions_statements',2,'p_functions_statements_1','parser.py',43),
  ('functions_statements -> function_call start','functions_statements',2,'p_functions_statements_3','parser.py',46),
  ('conditional_statements -> if_else_statement start','conditional_statements',2,'p_conditional_statements_1','parser.py',49),
  ('conditional_statements -> if_statement start','conditional_statements',2,'p_conditional_statements_3','parser.py',52),
  ('if_else_statement -> KEYWORD_IF BR_LCIR if_cond BR_RCIR M_1 compound_statement KEYWORD_ELSE M_2 compound_statement M_3','if_else_statement',10,'p_if_else_statement_definition_2','parser.py',55),
  ('if_statement -> KEYWORD_IF BR_LCIR if_cond BR_RCIR M_1 compound_statement M_3','if_statement',7,'p_if_statement_definition','parser.py',58),
  ('while_loop -> KEYWORD_WHILE BR_LCIR M_4 if_cond BR_RCIR M_5 compound_statement M_6','while_loop',8,'p_while_loop','parser.py',61),
  ('for_loop -> KEYWORD_FOR BR_LCIR IDENTIFIER KEYWORD_IN for_range BR_RCIR M_7 compound_statement M_8','for_loop',9,'p_for_loop','parser.py',64),
  ('function_definition -> fname OP_FUNC_ASGN KEYWORD_FUNCTION BR_LCIR arg_list M_10 BR_RCIR compound_statement M_11','function_definition',9,'p_function_definition_1','parser.py',67),
  ('function_definition -> fname OP_FUNC_ASGN KEYWORD_FUNCTION BR_LCIR BR_RCIR M_12 compound_statement M_13','function_definition',8,'p_function_definition_1','parser.py',68),
  ('fname -> IDENTIFIER','fname',1,'p_fname','parser.py',79),
  ('arg_list -> IDENTIFIER M_9 SEP_COMMA arg_list','arg_list',4,'p_arg_list_definition_1','parser.py',91),
  ('arg_list -> IDENTIFIER M_9','arg_list',2,'p_arg_list_definition_1','parser.py',92),
  ('M_9 -> <empty>','M_9',0,'p_M_9','parser.py',98),
  ('M_10 -> <empty>','M_10',0,'p_M_10','parser.py',111),
  ('M_12 -> <empty>','M_12',0,'p_M_12','parser.py',117),
  ('M_11 -> <empty>','M_11',0,'p_M_11','parser.py',123),
  ('M_13 -> <empty>','M_13',0,'p_M_13','parser.py',128),
  ('M_1 -> <empty>','M_1',0,'p_M_1','parser.py',133),
  ('M_2 -> <empty>','M_2',0,'p_M_2','parser.py',139),
  ('M_3 -> <empty>','M_3',0,'p_M_3','parser.py',146),
  ('M_4 -> <empty>','M_4',0,'p_M_4','parser.py',152),
  ('M_5 -> <empty>','M_5',0,'p_M_5','parser.py',158),
  ('M_6 -> <empty>','M_6',0,'p_M_6','parser.py',164),
  ('M_7 -> <empty>','M_7',0,'p_M_7','parser.py',171),
  ('M_8 -> <empty>','M_8',0,'p_M_8','parser.py',185),
  ('function_call -> fname2 BR_LCIR arg_to_pass BR_RCIR M_14','function_call',5,'p_function_call','parser.py',195),
  ('fname2 -> IDENTIFIER','fname2',1,'p_fname_2','parser.py',198),
  ('M_14 -> <empty>','M_14',0,'p_M_14','parser.py',201),
  ('arg_to_pass -> arg_to_pass SEP_COMMA arg M_15','arg_to_pass',4,'p_arg_to_pass_1','parser.py',211),
  ('arg_to_pass -> arg M_15','arg_to_pass',2,'p_arg_to_pass_2','parser.py',214),
  ('arg_to_pass -> <empty>','arg_to_pass',0,'p_arg_to_pass_3','parser.py',217),
  ('arg -> rightside','arg',1,'p_arg_1','parser.py',220),
  ('M_15 -> <empty>','M_15',0,'p_M_15','parser.py',224),
  ('compound_statement -> BR_LCUR statement_list BR_RCUR','compound_statement',3,'p_compound_statement_1','parser.py',228),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','parser.py',232),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','parser.py',235),
  ('statement -> expression','statement',1,'p_statement_definition_1','parser.py',238),
  ('statement -> for_loop','statement',1,'p_statement_definition_3','parser.py',241),
  ('statement -> while_loop','statement',1,'p_statement_definition_4','parser.py',244),
  ('statement -> if_statement','statement',1,'p_statement_definition_5','parser.py',247),
  ('statement -> if_else_statement','statement',1,'p_statement_definition_6','parser.py',250),
  ('if_cond -> TYPE_BOOLEAN','if_cond',1,'p_if_cond_1','parser.py',253),
  ('if_cond -> comparison_statement','if_cond',1,'p_if_cond_2','parser.py',257),
  ('if_cond -> comparison_statement logop if_cond','if_cond',3,'p_if_cond_3','parser.py',261),
  ('if_cond -> comparison_statement bitop if_cond','if_cond',3,'p_if_cond_4','parser.py',267),
  ('if_cond -> OP_BITNOT if_cond','if_cond',2,'p_if_cond_5','parser.py',273),
  ('comparison_statement -> IDENTIFIER compop any_type','comparison_statement',3,'p_comparison_statement_0','parser.py',279),
  ('comparison_statement -> IDENTIFIER compop IDENTIFIER','comparison_statement',3,'p_comparison_statement_1','parser.py',291),
  ('comparison_statement -> any_type compop any_type','comparison_statement',3,'p_comparison_statement_2','parser.py',326),
  ('comparison_statement -> BR_LCIR if_cond BR_RCIR','comparison_statement',3,'p_comparison_statement_3','parser.py',347),
  ('logop -> OP_LOGAND','logop',1,'p_logop_1','parser.py',351),
  ('logop -> OP_LOGOR','logop',1,'p_logop_2','parser.py',355),
  ('bitop -> OP_BITAND','bitop',1,'p_bitop_1','parser.py',359),
  ('bitop -> OP_BITOR','bitop',1,'p_bitop_2','parser.py',363),
  ('compop -> OP_GREAT','compop',1,'p_comop_definition_1','parser.py',367),
  ('compop -> OP_LESS','compop',1,'p_comop_definition_2','parser.py',371),
  ('compop -> OP_LEEQ','compop',1,'p_comop_definition_3','parser.py',375),
  ('compop -> OP_GREQ','compop',1,'p_comop_definition_4','parser.py',379),
  ('compop -> OP_NOEQ','compop',1,'p_comop_definition_5','parser.py',383),
  ('compop -> OP_COMP','compop',1,'p_comop_definition_6','parser.py',387),
  ('expression -> IDENTIFIER BR_LCSR rightside BR_RCSR OP_ASGN rightside','expression',6,'p_expression_math_0','parser.py',391),
  ('expression -> IDENTIFIER OP_ASGN rightside','expression',3,'p_expression_math_1','parser.py',402),
  ('expression -> IDENTIFIER OP_ASGN vector_definition M_16','expression',4,'p_expression_math_2','parser.py',413),
  ('M_16 -> <empty>','M_16',0,'p_M_16','parser.py',423),
  ('expression -> KEYWORD_PRINT BR_LCIR rightside BR_RCIR','expression',4,'p_expression_math_4','parser.py',432),
  ('expression -> KEYWORD_RETURN BR_LCIR rightside BR_RCIR','expression',4,'p_expression_math_5','parser.py',436),
  ('vector_definition -> KEYWORD_VECTOR BR_LCIR SEP_COMMA TYPE_INTEGER BR_RCIR','vector_definition',5,'p_vector_2','parser.py',439),
  ('vector_definition -> KEYWORD_VECTOR_CONSTRUCTOR BR_LCIR vector_elements BR_RCIR','vector_definition',4,'p_vector_4','parser.py',444),
  ('vector_elements -> vector_elements SEP_COMMA TYPE_INTEGER','vector_elements',3,'p_vector_elements','parser.py',448),
  ('vector_elements -> TYPE_INTEGER','vector_elements',1,'p_vector_elements','parser.py',449),
  ('rightside -> rightside math rightside','rightside',3,'p_math_rightside_1','parser.py',462),
  ('rightside -> IDENTIFIER math rightside','rightside',3,'p_math_rightside_3','parser.py',478),
  ('rightside -> BR_LCIR rightside BR_RCIR','rightside',3,'p_math_rightside_4','parser.py',491),
  ('rightside -> any_type bitop rightside','rightside',3,'p_math_rightside_5','parser.py',495),
  ('rightside -> any_type logop rightside','rightside',3,'p_math_rightside_6','parser.py',503),
  ('rightside -> IDENTIFIER bitop rightside','rightside',3,'p_math_rightside_8','parser.py',511),
  ('rightside -> IDENTIFIER logop rightside','rightside',3,'p_math_rightside_9','parser.py',524),
  ('rightside -> IDENTIFIER','rightside',1,'p_math_rightside_10','parser.py',537),
  ('rightside -> any_type','rightside',1,'p_math_rightside_11','parser.py',547),
  ('rightside -> IDENTIFIER BR_LCSR rightside BR_RCSR','rightside',4,'p_math_rightside_13','parser.py',551),
  ('math -> OP_PLUS','math',1,'p_math_1','parser.py',574),
  ('math -> OP_MINUS','math',1,'p_math_2','parser.py',578),
  ('math -> OP_MULT','math',1,'p_math_3','parser.py',582),
  ('math -> OP_DIVIDE','math',1,'p_math_4','parser.py',586),
  ('math -> OP_EXPO','math',1,'p_math_5','parser.py',590),
  ('math -> OP_REMDR','math',1,'p_math_6','parser.py',594),
  ('for_range -> for_range_variables SEP_COLON for_range_variables','for_range',3,'p_for_range','parser.py',598),
  ('for_range_variables -> IDENTIFIER','for_range_variables',1,'p_for_range_variables','parser.py',603),
  ('for_range_variables -> TYPE_INTEGER','for_range_variables',1,'p_for_range_variables_0','parser.py',618),
  ('any_type -> TYPE_NUMERIC','any_type',1,'p_any_type_1','parser.py',624),
  ('any_type -> TYPE_INTEGER','any_type',1,'p_any_type_2','parser.py',630),
  ('any_type -> TYPE_STRING','any_type',1,'p_any_type_3','parser.py',636),
  ('any_type -> TYPE_BOOLEAN','any_type',1,'p_any_type_4','parser.py',642),
]
